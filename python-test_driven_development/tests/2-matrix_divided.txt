==========================
2-matrix_divided.py text file
==========================

2-matrix_divided.py module has function called ``matrix_divided()``.

To import this module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

``matrix_divided()`` returns a new matrix that divideds all elements of 
the original one

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

divisor is not a integer or float:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "string")
	Traceback (most recent call last):
	TypeError: div must be a number

matrix must be a list of lists of integers or floats:

	>>> matrix_divided(3, 5)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], [4, "string", 5]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([1, 2, 3, 4], 5)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[]], 5)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Miss one or both arguments:

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

        >>> matrix_divided()
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


Each row of the matrix must be of the same size:

	>>> matrix_divided([[1, 2, 3], [4, 6]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

divisor div can't be equal to 0:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

when div is float('inf') or float('NaN'):

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]	

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('NaN'))
	[[nan, nan, nan], [nan, nan, nan]]
